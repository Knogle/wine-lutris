From 1cd7b16f12e5af122623fc3af2de124f4f63742e Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Mon, 21 Mar 2022 18:56:47 +0300
Subject: [PATCH] winevulkan: HACK: Add functions involving shader compilation
 to DIRECT_CALL_FUNCTIONS.

Pipeline compilation may still require more stack space than we currently
have allocated for syscalls. It is not entirely clear which is the practical
limit for that stack requirements. Increasing the syscall stack size greatly
looks a bit risky on 32 bit due to VM space limit. Calling these
functions on application stack seems like a more sure and less risky
temporary solution.
---
 dlls/winevulkan/make_vulkan | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index a0287c1ff09..27157b9953a 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -154,6 +154,13 @@ DIRECT_CALL_FUNCTIONS = [
     "vkEnumerateInstanceVersion",
     "vkUpdateDescriptorSets",
     "vkUpdateDescriptorSetWithTemplate",
+# These functions involving shader compilation might require large stack
+# (more than we have in syscall stack) and it is not entirely clear how large,
+# so add them here too for now.
+    "vkCreateComputePipelines",
+    "vkCreateGraphicsPipelines",
+    "vkCreateRayTracingPipelinesKHR",
+    "vkCreateRayTracingPipelinesNV",
 ]
 
 # Functions part of our winevulkan graphics driver interface.

From 9e22a04188f7bbfba2e0789483f17c904794b95c Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Wed, 9 Mar 2022 22:11:48 +0100
Subject: [PATCH 05/14] winevulkan: Avoid zero-sized allocations.

Fixes some -Wmaybe-uninitialized warnings in the next patch.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit be8b50b82d4d71975a7a49a9b0e9685b27de8e68)
---
 dlls/winevulkan/make_vulkan | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 13cd8fba8ac..e02859fc4a2 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -2162,7 +2162,7 @@ class ConversionFunction(object):
                 body += "#endif /* USE_STRUCT_CONVERSION */\n"
 
         body += "    unsigned int i;\n\n"
-        body += "    if (!in) return NULL;\n\n"
+        body += "    if (!in || !count) return NULL;\n\n"
 
         body += "    out = malloc(count * sizeof(*out));\n"
 
-- 
2.36.1

From 351f545d8bddcfbd81fb9ad00602c43d3107055c Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Wed, 9 Mar 2022 22:11:49 +0100
Subject: [PATCH 06/14] winevulkan: Manually fixup struct alignment for
 VkPipelineCreationFeedback.

We can't reasonably auto generate this because it's output in an
otherwise input pNext chain.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit 71b034c34cef101608ca94c4ea91901a6aed9de5)
---
 dlls/winevulkan/make_vulkan |   8 +++
 dlls/winevulkan/vulkan.c    | 106 ++++++++++++++++++++++++++++++++++++
 2 files changed, 114 insertions(+)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index e02859fc4a2..d0649d8ae07 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -213,6 +213,8 @@ FUNCTION_OVERRIDES = {
     # Device functions
     "vkAllocateCommandBuffers" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
     "vkCreateCommandPool" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.NONE},
+    "vkCreateComputePipelines" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.PRIVATE},
+    "vkCreateGraphicsPipelines" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.PRIVATE},
     "vkDestroyCommandPool" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.NONE},
     "vkDestroyDevice" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
     "vkFreeCommandBuffers" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
@@ -260,6 +262,9 @@ FUNCTION_OVERRIDES = {
     "vkGetDeviceGroupSurfacePresentModesKHR" : {"dispatch" : True, "driver" : True, "thunk" : ThunkType.PUBLIC},
     "vkGetPhysicalDevicePresentRectanglesKHR" : {"dispatch" : True, "driver" : True, "thunk" : ThunkType.PUBLIC},
 
+    # VK_KHR_ray_tracing_pipeline
+    "vkCreateRayTracingPipelinesKHR" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.PRIVATE},
+
     # VK_EXT_calibrated_timestamps
     "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
     "vkGetCalibratedTimestampsEXT" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE, "loader_thunk" : ThunkType.PRIVATE},
@@ -271,6 +276,9 @@ FUNCTION_OVERRIDES = {
     # VK_EXT_debug_report
     "vkCreateDebugReportCallbackEXT" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.NONE},
     "vkDestroyDebugReportCallbackEXT" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.NONE},
+
+    # VK_NV_ray_tracing
+    "vkCreateRayTracingPipelinesNV" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.PRIVATE},
 }
 
 STRUCT_CHAIN_CONVERSIONS = {
diff --git a/dlls/winevulkan/vulkan.c b/dlls/winevulkan/vulkan.c
index dd96ce230d9..46a82418fc7 100644
--- a/dlls/winevulkan/vulkan.c
+++ b/dlls/winevulkan/vulkan.c
@@ -3288,7 +3288,113 @@ NTSTATUS wine_vkQueuePresentKHR(void *args)
     free(arr);
 
     return res;
+}
+
+static void fixup_pipeline_feedback(VkPipelineCreationFeedback *feedback, uint32_t count)
+{
+#if defined(USE_STRUCT_CONVERSION)
+    struct host_pipeline_feedback
+    {
+        VkPipelineCreationFeedbackFlags flags;
+        uint64_t duration;
+    } *host_feedback;
+    int64_t i;
+
+    host_feedback = (void *) feedback;
+
+    for (i = count - 1; i >= 0; i--)
+    {
+        memmove(&feedback[i].duration, &host_feedback[i].duration, sizeof(uint64_t));
+        feedback[i].flags = host_feedback[i].flags;
+    }
+#endif
+}
+
+static void fixup_pipeline_feedback_info(const void *pipeline_info)
+{
+    VkPipelineCreationFeedbackCreateInfo *feedback;
+
+    feedback = wine_vk_find_struct(pipeline_info, PIPELINE_CREATION_FEEDBACK_CREATE_INFO);
+
+    if (!feedback)
+        return;
+
+    fixup_pipeline_feedback(feedback->pPipelineCreationFeedback, 1);
+    fixup_pipeline_feedback(feedback->pPipelineStageCreationFeedbacks,
+        feedback->pipelineStageCreationFeedbackCount);
+}
+
+NTSTATUS wine_vkCreateComputePipelines(void *args)
+{
+    struct vkCreateComputePipelines_params *params = args;
+    VkResult res;
+    uint32_t i;
+
+    TRACE("%p, 0x%s, %u, %p, %p, %p\n", params->device, wine_dbgstr_longlong(params->pipelineCache),
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    res = thunk_vkCreateComputePipelines(params->device, params->pipelineCache,
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    for (i = 0; i < params->createInfoCount; i++)
+        fixup_pipeline_feedback_info(&params->pCreateInfos[i]);
+
+    return res;
+}
 
+NTSTATUS wine_vkCreateGraphicsPipelines(void *args)
+{
+    struct vkCreateGraphicsPipelines_params *params = args;
+    VkResult res;
+    uint32_t i;
+
+    TRACE("%p, 0x%s, %u, %p, %p, %p\n", params->device, wine_dbgstr_longlong(params->pipelineCache),
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    res = thunk_vkCreateGraphicsPipelines(params->device, params->pipelineCache,
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    for (i = 0; i < params->createInfoCount; i++)
+        fixup_pipeline_feedback_info(&params->pCreateInfos[i]);
+
+    return res;
+}
+
+NTSTATUS wine_vkCreateRayTracingPipelinesKHR(void *args)
+{
+    struct vkCreateRayTracingPipelinesKHR_params *params = args;
+    VkResult res;
+    uint32_t i;
+
+    TRACE("%p, 0x%s, 0x%s, %u, %p, %p, %p\n", params->device,
+        wine_dbgstr_longlong(params->deferredOperation), wine_dbgstr_longlong(params->pipelineCache),
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    res = thunk_vkCreateRayTracingPipelinesKHR(params->device, params->deferredOperation, params->pipelineCache,
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    for (i = 0; i < params->createInfoCount; i++)
+        fixup_pipeline_feedback_info(&params->pCreateInfos[i]);
+
+    return res;
+}
+
+NTSTATUS wine_vkCreateRayTracingPipelinesNV(void *args)
+{
+    struct vkCreateRayTracingPipelinesNV_params *params = args;
+    VkResult res;
+    uint32_t i;
+
+    TRACE("%p, 0x%s, %u, %p, %p, %p\n", params->device, wine_dbgstr_longlong(params->pipelineCache),
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    res = thunk_vkCreateRayTracingPipelinesNV(params->device, params->pipelineCache,
+        params->createInfoCount, params->pCreateInfos, params->pAllocator, params->pPipelines);
+
+    for (i = 0; i < params->createInfoCount; i++)
+        fixup_pipeline_feedback_info(&params->pCreateInfos[i]);
+
+    return res;
 }
 
 BOOL WINAPI wine_vk_is_available_instance_function(VkInstance instance, const char *name)
-- 
2.36.1

From e2c07a799f523a2761ffd0064afc571a80d6ec48 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Wed, 9 Mar 2022 22:11:50 +0100
Subject: [PATCH 07/14] winevulkan: Enable VK_EXT_pipeline_creation_feedback.

We did previously not support this extension because it runs into 32bit
alignment issues but those are now fixed.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit d08d3c184e088972f0d29ea77456409bbce5d5ef)
---
 dlls/winevulkan/make_vulkan | 1 -
 1 file changed, 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index d0649d8ae07..a256d301d26 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -96,7 +96,6 @@ UNSUPPORTED_EXTENSIONS = [
     "VK_AMD_display_native_hdr",
     "VK_EXT_full_screen_exclusive",
     "VK_EXT_hdr_metadata", # Needs WSI work.
-    "VK_EXT_pipeline_creation_feedback",
     "VK_GOOGLE_display_timing",
     "VK_KHR_external_fence_win32",
     "VK_KHR_external_semaphore_win32",
-- 
2.36.1

From 2c63e48890d1542b83852a8820a9ddc951946a82 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 8 Mar 2022 14:44:51 +0100
Subject: [PATCH 08/14] winevulkan: Update to VK spec version 1.3.207.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit ddd9a4239a5fdfa77bbcf1c826041910e2c4952f)
---
 dlls/winevulkan/make_vulkan | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index a256d301d26..94ab803921c 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -64,7 +64,7 @@ from enum import Enum
 LOGGER = logging.Logger("vulkan")
 LOGGER.addHandler(logging.StreamHandler())
 
-VK_XML_VERSION = "1.3.204"
+VK_XML_VERSION = "1.3.207"
 WINE_VK_VERSION = (1, 3)
 
 # Filenames to create.
-- 
2.36.1

From 3a350a850ee6f02caf28355d1ec47844e83940b8 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 15 Mar 2022 20:11:41 +0100
Subject: [PATCH 09/14] winevulkan: Update to VK spec version 1.3.208.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit 0a4af87e7f411925d76659e81d65147be76c17af)
---
 dlls/winevulkan/make_vulkan | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 94ab803921c..1c44d287940 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -64,7 +64,7 @@ from enum import Enum
 LOGGER = logging.Logger("vulkan")
 LOGGER.addHandler(logging.StreamHandler())
 
-VK_XML_VERSION = "1.3.207"
+VK_XML_VERSION = "1.3.208"
 WINE_VK_VERSION = (1, 3)
 
 # Filenames to create.
-- 
2.36.1

From 4e4ce46b8e10286607028ef920bcca9ec0c5b40f Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 29 Mar 2022 19:03:35 +0200
Subject: [PATCH 10/14] winevulkan: Update to VK spec version 1.3.210.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit e48fa8446accc1ba2725da27b59b690cf7e13cca)
---
 dlls/winevulkan/make_vulkan | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 1c44d287940..35714aef2d2 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -64,7 +64,7 @@ from enum import Enum
 LOGGER = logging.Logger("vulkan")
 LOGGER.addHandler(logging.StreamHandler())
 
-VK_XML_VERSION = "1.3.208"
+VK_XML_VERSION = "1.3.210"
 WINE_VK_VERSION = (1, 3)
 
 # Filenames to create.
-- 
2.36.1

From b200d30eb25cab14939a02a9105e561399a2011f Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Thu, 7 Apr 2022 12:26:41 +0200
Subject: [PATCH 11/14] winevulkan: Update to VK spec version 1.3.211.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit 343ddade5e0486790344195bd4f949228a3b3173)
---
 dlls/winevulkan/make_vulkan | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 35714aef2d2..93a7f18236c 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -64,7 +64,7 @@ from enum import Enum
 LOGGER = logging.Logger("vulkan")
 LOGGER.addHandler(logging.StreamHandler())
 
-VK_XML_VERSION = "1.3.210"
+VK_XML_VERSION = "1.3.211"
 WINE_VK_VERSION = (1, 3)
 
 # Filenames to create.
-- 
2.36.1

From aa43574824f99b7adeffb2f5cf36df93adac1c2f Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 10 May 2022 19:54:35 +0200
Subject: [PATCH 12/14] winevulkan: Prevent infinite recursion in make_vulkan.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit 3d824d11dbde45299963a758b97d1e417dca36e0)
---
 dlls/winevulkan/make_vulkan | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 93a7f18236c..3914078492d 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -2055,6 +2055,8 @@ class VkStruct(Sequence):
         """
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_alignment():
                 return True
         return False
@@ -2069,6 +2071,8 @@ class VkStruct(Sequence):
             return True
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_conversion():
                 return True
         return False
@@ -2077,6 +2081,8 @@ class VkStruct(Sequence):
         """ Returns if struct members need unwrapping of handle. """
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_unwrapping():
                 return True
         return False
@@ -2085,11 +2091,11 @@ class VkStruct(Sequence):
         """ Check if any struct member needs some memory freeing."""
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_free():
                 return True
 
-            continue
-
         return False
 
     def needs_struct_extensions_conversion(self):
@@ -3389,7 +3395,7 @@ class VkRegistry(object):
                 if "data" in type_info:
                     types[m.type]["data"].required = True
 
-                if type_info["category"] == "struct":
+                if type_info["category"] == "struct" and struct.name != m.type:
                     # Yay, recurse
                     mark_struct_dependencies(type_info["data"], types)
                 elif type_info["category"] == "funcpointer":
-- 
2.36.1

From 3f2595d99df22f354f3c400b4e3dfef89eaec6ec Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 10 May 2022 19:55:24 +0200
Subject: [PATCH 13/14] winevulkan: Update to VK spec version 1.3.213.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
(cherry picked from commit d20d5d0737115537fe76086b17394092c6fe2c6e)
---
 dlls/winevulkan/make_vulkan | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 3914078492d..25a9d6ce223 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -64,7 +64,7 @@ from enum import Enum
 LOGGER = logging.Logger("vulkan")
 LOGGER.addHandler(logging.StreamHandler())
 
-VK_XML_VERSION = "1.3.211"
+VK_XML_VERSION = "1.3.213"
 WINE_VK_VERSION = (1, 3)
 
 # Filenames to create.
@@ -116,6 +116,10 @@ UNSUPPORTED_EXTENSIONS = [
     # Extensions which require callback handling
     "VK_EXT_device_memory_report",
 
+    # Needs https://github.com/KhronosGroup/Vulkan-Docs/pull/1848
+    # or a rework of how we detect returned structs.
+    "VK_EXT_image_compression_control",
+
     # Deprecated extensions
     "VK_NV_external_memory_capabilities",
     "VK_NV_external_memory_win32",
-- 
2.36.1
